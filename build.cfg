[buildout]

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml
force = false

[xdv]
recipe = zc.recipe.egg
eggs =
   lxml
   PasteScript
   dv.xdvserver
scripts =
   paster
   xdvcompiler

[zope2]
recipe = plone.recipe.zope2install
fake-zope-eggs = true
additional-fake-eggs =
   ZConfig
   pytz
skip-fake-eggs =
   zope.testing
   zope.i18n
url = ${downloads:zope}

[zeoserver]
recipe = plone.recipe.zope2zeoserver
zope2-location = ${zope2:location}
zeo-address = ${ports:zeo-server}
effective-user = ${users:zope}
zeo-var = ${buildout:directory}/var
blob-storage = ${zeoserver:zeo-var}/blobstorage
eggs = plone.app.blob


[instance1]
recipe = collective.recipe.zope2cluster
instance-clone = instance-settings
http-address = ${hosts:instance1}:${ports:instance1}
zope-conf-additional =
   <icp-server>
      address ${ports:instance1-icp}
   </icp-server>


[instance2]
recipe = collective.recipe.zope2cluster
instance-clone = instance-settings
http-address = ${hosts:instance2}:${ports:instance2}
zope-conf-additional =
   <icp-server>
      address ${ports:instance2-icp}
   </icp-server>


[instance3]
recipe = collective.recipe.zope2cluster
instance-clone = instance-settings
http-address = ${hosts:instance3}:${ports:instance3}
zope-conf-additional =
   <icp-server>
      address ${ports:instance3-icp}
   </icp-server>


[instance4]
recipe = collective.recipe.zope2cluster
instance-clone = instance-settings
http-address = ${hosts:instance4}:${ports:instance4}
zope-conf-additional =
   <icp-server>
      address ${ports:instance4-icp}
   </icp-server>


[instance-debug]
recipe = collective.recipe.zope2cluster
instance-clone = instance-settings
http-address = ${hosts:instance-debug}:${ports:instance-debug}
debug-mode = on
verbose-security = on


[nginx-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:nginx}
patches =
   ${buildout:directory}/patches/nginx-xslt.patch
   ${buildout:directory}/patches/nginx-xslt-options.patch
   ${buildout:directory}/patches/nginx-xslt-conf.patch
configure-options =
   --with-http_xslt_module
   --with-http_stub_status_module
   --with-libxml2=${buildout:directory}/parts/libxml2
   --with-libxslt=${buildout:directory}/parts/libxslt
   --conf-path=${buildout:directory}/production/nginx/default.conf
   --error-log-path=${buildout:directory}/var/log/main-error.log
   --pid-path=${buildout:directory}/var/main.pid
   --lock-path=${buildout:directory}/var/main.lock


[varnish-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:varnish}


[haproxy-build]
recipe = plone.recipe.haproxy
url = http://dist.jarn.com/public/haproxy-1.3.15.7.zip
cpu = ${build:cpu}
target = ${build:target}


[main-config]
recipe = collective.recipe.template
input = ${buildout:directory}/production/main.conf.template
output = ${buildout:directory}/production/main.conf


[compile-theme]
recipe = plone.recipe.command
command = ${buildout:directory}/bin/xdvcompiler -t ${theme:theme} -r ${theme:rules} -a ${theme:absolute-prefix} ${theme:output-xslt}
update-command = ${compile-theme:command}


[cache-config]
recipe = collective.recipe.template
input = ${buildout:directory}/production/cache.conf.template
output = ${buildout:directory}/production/cache.conf


[cache]
recipe = plone.recipe.varnish
daemon = ${buildout:directory}/parts/varnish-build/sbin/varnishd
mode = foreground
bind = ${hosts:cache}:${ports:cache}
cache-size = 1G
user = ${users:cache}
config = ${buildout:directory}/production/cache.conf


[transform-config]
recipe = collective.recipe.template
input = ${buildout:directory}/production/transform.conf.template
output = ${buildout:directory}/production/transform.conf


[balancer-config]
recipe = collective.recipe.template
input = ${buildout:directory}/production/balancer.conf.template
output = ${buildout:directory}/production/balancer.conf


[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = ${supervisor-settings:user}
password = ${supervisor-settings:password}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
   10 zeo     ${zeoserver:location}/bin/runzeo
                  true ${users:zope}
   20 instance1 ${buildout:directory}/parts/instance1/bin/runzope
                  true ${users:zope}
   20 instance2 ${buildout:directory}/parts/instance2/bin/runzope
                  true ${users:zope}
   20 instance3 ${buildout:directory}/parts/instance3/bin/runzope
                  true ${users:zope}
   20 instance4 ${buildout:directory}/parts/instance4/bin/runzope
                  true ${users:zope}
   30 balancer ${buildout:directory}/bin/haproxy
      [-f ${buildout:directory}/production/balancer.conf -db]
      true ${users:balancer}
   40 transform ${nginx-build:location}/sbin/nginx
      [-c ${buildout:directory}/production/transform.conf]
      true ${users:transform}
   50 cache ${buildout:directory}/bin/cache
      true ${users:cache}
   60 main ${nginx-build:location}/sbin/nginx
      [-c ${buildout:directory}/production/main.conf]
      true


[logrotate.conf]
recipe = collective.recipe.template
input = ${buildout:directory}/production/logrotate.conf.template
output = ${buildout:directory}/production/logrotate.conf


[zopepy]
recipe = zc.recipe.egg
eggs = ${instance-settings:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance-settings:eggs}
products = ${instance-settings:products}
packages = ${zope2:location}/lib/python ./


[xdv-setup]
recipe = collective.recipe.template
input = ${buildout:directory}/devel/server.ini.template
output = ${buildout:directory}/devel/server.ini

