[buildout]
extensions = mr.developer
extends =
    http://dist.plone.org/release/4.3-latest/versions.cfg
    production-kgv.cfg

find-links =
    http://dist.plone.org/release/4.3-latest/
    http://dist.plone.org/thirdparty/

newest = false
show-picked-versions = true
eggs =
    Plone
    plone.app.upgrade
zcml =
versions = versions

# For options see http://pypi.python.org/pypi/mr.developer
auto-checkout = *
sources = sources

var-dir=${buildout:directory}/var

parts =
    lxml
    zeoserver
    client1
    client2
    client3
    client4
    client-debug
    supervisor
#    supervisor-crontab
    logrotate-config
#    logrotate-crontab

########################
## base.cfg overrides ##

# port which Zope will be listening to
http-address = 8080

# default Zope user
user = admin:admin

# user which the process will run as
effective-user = macagua

# a production environment does NOT need debugging
debug-mode = off

# a production environment does NOT need code warnings
deprecation-warnings = off

# a production environment does NOT need security code warnings
verbose-security = off

##############################################################################
#  Configurations.
##############################################################################

# Plone Website names using for virtual hosting configurations
[plone-sites]
main = ${site-settings:site-id}

[site-settings]
site-id = Plone
localhost = 127.0.0.1
#ip-server = 192.168.4.109
ip-server = 127.0.0.1
mail-for-errors = leonardoc@plone.org


[hosts]
zeoserver    = ${site-settings:localhost}
client1      = ${site-settings:localhost}
client2      = ${site-settings:localhost}
client3      = ${site-settings:localhost}
client4      = ${site-settings:localhost}
client-debug = ${site-settings:ip-server}
supervisor   = ${site-settings:localhost}

[ports]
zeoserver    = 8501
client1      = 8401
client2      = 8402
client3      = 8403
client4      = 8404
client-debug = 8405
supervisor   = 9001

# -------------------------------
# Supervisor basic configurations
# -------------------------------

# Supervisor basic configurations
# -------------------------------
[supervisor-settings]
user = admin
password = admin


# -----------------
# Quotas Parameters
# -----------------
[quotas]
# Supervisor quotas
# -----------------
instance-memory = 800MB

[versions]
z3c.recipe.staticlxml = 0.9

# Required by:
# z3c.recipe.staticlxml==0.9
zc.recipe.cmmi = 1.3.5

[client_base]
user = ${buildout:user}
eggs = ${buildout:eggs}
zcml = ${buildout:zcml}
enviroment-vars =
    zope_i18n_compile_mo_files true
blob-storage = ${buildout:directory}/var/blobstorage
effective-user = ${buildout:effective-user}

# Basic ZEO storage
zeo-client = true
#user = ${site-settings:instance_username}:${site-settings:instance_password}
blob-storage = ${zeoserver:zeo-var}/blobstorage

# Debug mode
debug-mode = ${buildout:debug-mode}
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}

[zeoserver_base]
# Packing
pack-days = 0

# Customization
eggs =
    ZODB3
    mailinglogger

# If we try to start as root, Zope will switch to the user below
effective-user = ${buildout:effective-user}

# Process
zeo-var = ${buildout:directory}/var

# Set storage
blob-storage   = ${buildout:var-dir}/blobstorage
shared-blob    = on

# Logging
# Put the log, pid and socket files in var/zeoserver
zeo-log        = ${zeoserver:zeo-var}/${:_buildout_section_name_}/zeoserver.log
pid-file       = ${zeoserver:zeo-var}/${:_buildout_section_name_}/zeoserver.pid
socket-name    = ${zeoserver:zeo-var}/${:_buildout_section_name_}/zeo.zdsock

# For options see http://pypi.python.org/pypi/plone.recipe.zeoserver
[zeoserver]
<= zeoserver_base
recipe         = plone.recipe.zeoserver
zeo-address    = ${hosts:zeoserver}:${ports:zeoserver}

[client1]
<= client_base
recipe                = plone.recipe.zope2instance
zeo-client            = true
zeo-address           = ${hosts:zeoserver}:${ports:zeoserver}
debug-mode            = ${buildout:debug-mode}
verbose-security      = ${buildout:verbose-security}
zodb-cache-size       = 5000
zeo-client-cache-size = 300MB
http-address          = ${hosts:client1}:${ports:client1}
effective-user        = ${buildout:effective-user}
shared-blob           = on
# Put the log, pid, loc files in var/client-debug
event-log             = ${buildout:directory}/var/${:_buildout_section_name_}/event.log
z2-log                = ${buildout:directory}/var/${:_buildout_section_name_}/Z2.log
pid-file              = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.pid
lock-file             = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.lock

[client2]
<= client_base
recipe                = plone.recipe.zope2instance
zeo-client            = true
zeo-address           = ${hosts:zeoserver}:${ports:zeoserver}
debug-mode            = ${buildout:debug-mode}
verbose-security      = ${buildout:verbose-security}
zodb-cache-size       = 5000
zeo-client-cache-size = 300MB
http-address          = ${hosts:client2}:${ports:client2}
effective-user        = ${buildout:effective-user}
shared-blob           = on
# Put the log, pid, loc files in var/client-debug
event-log             = ${buildout:directory}/var/${:_buildout_section_name_}/event.log
z2-log                = ${buildout:directory}/var/${:_buildout_section_name_}/Z2.log
pid-file              = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.pid
lock-file             = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.lock

[client3]
<= client_base
recipe                = plone.recipe.zope2instance
zeo-client            = true
zeo-address           = ${hosts:zeoserver}:${ports:zeoserver}
debug-mode            = ${buildout:debug-mode}
verbose-security      = ${buildout:verbose-security}
zodb-cache-size       = 5000
zeo-client-cache-size = 300MB
http-address          = ${hosts:client3}:${ports:client3}
effective-user        = ${buildout:effective-user}
shared-blob           = on
# Put the log, pid, loc files in var/client-debug
event-log             = ${buildout:directory}/var/${:_buildout_section_name_}/event.log
z2-log                = ${buildout:directory}/var/${:_buildout_section_name_}/Z2.log
pid-file              = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.pid
lock-file             = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.lock

[client4]
<= client_base
recipe                = plone.recipe.zope2instance
zeo-client            = true
zeo-address           = ${hosts:zeoserver}:${ports:zeoserver}
debug-mode            = ${buildout:debug-mode}
verbose-security      = ${buildout:verbose-security}
zodb-cache-size       = 5000
zeo-client-cache-size = 300MB
http-address          = ${hosts:client4}:${ports:client4}
effective-user        = ${buildout:effective-user}
shared-blob           = on
# Put the log, pid, loc files in var/client-debug
event-log             = ${buildout:directory}/var/${:_buildout_section_name_}/event.log
z2-log                = ${buildout:directory}/var/${:_buildout_section_name_}/Z2.log
pid-file              = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.pid
lock-file             = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.lock

# Zeo client instance for debugging
[client-debug]
<= client_base
recipe                = plone.recipe.zope2instance
zeo-client            = true
zeo-address           = ${hosts:zeoserver}:${ports:zeoserver}
debug-mode            = on
verbose-security      = on
zodb-cache-size       = 5000
zeo-client-cache-size = 300MB
http-address          = ${hosts:client-debug}:${ports:client-debug}
effective-user        = ${buildout:effective-user}
shared-blob           = on
# Put the log, pid, loc files in var/client-debug
event-log             = ${buildout:directory}/var/${:_buildout_section_name_}/event.log
z2-log                = ${buildout:directory}/var/${:_buildout_section_name_}/Z2.log
pid-file              = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.pid
lock-file             = ${buildout:directory}/var/${:_buildout_section_name_}/client-debug.lock

##############################################################################
# Supervisor
##############################################################################

# This recipe help to install Supervisor, one to rule them all
# For options see http://pypi.python.org/pypi/collective.recipe.supervisor
[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = ${supervisor-settings:user}
password = ${supervisor-settings:password}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
loglevel = info
logfile = ${buildout:directory}/var/log/supervisord.log
logfile_maxbytes = 50MB
logfile_backups = 10
pidfile = ${buildout:directory}/var/supervisord.pid
file = ${buildout:directory}/var/supervisord.sock
chmod = 0700
nodaemon = false
#plugins = superlance
programs =
#  Prio Name      Program                                      Params
   10   zeoserver ${buildout:bin-directory}/zeoserver   [foreground]   ${zeoserver:location}   true
   20   client1 ${buildout:bin-directory}/client1   [console]   ${client1:location}   true
   20   client2 ${buildout:bin-directory}/client2   [console]   ${client2:location}   true
   20   client3 ${buildout:bin-directory}/client3   [console]   ${client3:location}   true
   20   client4 ${buildout:bin-directory}/client4   [console]   ${client4:location}   true

eventlisteners =
# Check every 60 seconds that no child process has exceeded. it's like a RSS memory quota
#    MemoryMonitor TICK_60 ${buildout:bin-directory}/memmon [-g zeo-clients=${quotas:instance-memory} -m ${site-settings:mail-for-errors}]
# Check every 60 seconds whether the plone instance is alive
#    HttpOk1 TICK_60 ${buildout:bin-directory}/httpok [-p client1 -t 20 http://${hosts:client1}:${ports:client}/${plone-sites:main}]
#    HttpOk2 TICK_60 ${buildout:bin-directory}/httpok [-p client2 -t 20 http://${hosts:client2}:${ports:client2}/${plone-sites:main}]
#    HttpOk3 TICK_60 ${buildout:bin-directory}/httpok [-p client3 -t 20 http://${hosts:client3}:${ports:client3}/${plone-sites:main}]
#    HttpOk4 TICK_60 ${buildout:bin-directory}/httpok [-p client4 -t 20 http://${hosts:client4}:${ports:client4}/${plone-sites:main}]

groups =
    10 zeo-cluster zeoserver
    20 zeo-clients client1,client2,client3,client4
#    40 httpok HttpOk1,HttpOk2,HttpOk3,HttpOk4

# This recipe help to Run once Supervisor, at startup.
# For options see http://pypi.python.org/pypi/z3c.recipe.usercrontab
[supervisor-crontab]
recipe = z3c.recipe.usercrontab
# copied from https://help.ubuntu.com/community/CronHowto
times = @reboot
command = ${buildout:bin-directory}/supervisord

##############################################################################
# logs
##############################################################################

# This recipe generates logrotate configurations
# For options see http://pypi.python.org/pypi/collective.recipe.template
[logrotate-config]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/logrotate.conf.template
output = ${buildout:directory}/etc/logrotate.conf

# This recipe to install a schedule task to run logrotate
# For options see http://pypi.python.org/pypi/z3c.recipe.usercrontab
[logrotate-crontab]
recipe = z3c.recipe.usercrontab
# copied from https://help.ubuntu.com/community/CronHowto
times = @daily
command = /usr/sbin/logrotate -s ${buildout:directory}/var/logrotate.status ${logrotate-config:output}

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml

[sources]